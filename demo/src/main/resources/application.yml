server:
  port: 8083
  servlet:
    context-path: /web
  tomcat:
    uri-encoding: UTF-8
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    # 下面为连接池的补充设置，应用到上面所有数据源中
    druid:
      #是否启动druid
      enable: false
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 最大连接池数量
      max-active: 30
      # 最小连接池数量
      min-idle: 5
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT 1 FROM DUAL
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-pool-prepared-statement-per-connection-size: 50
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      filters: stat,wall,log4j
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  # 设置使用哪个环境的配置
  profiles:
    active: dev

mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  #config-location: classpath:mapper/mybatis-config.xml
  configuration:
    #开启驼峰命名转换
    map-underscore-to-camel-case: true
    #获取数据库自增主键值
    use-generated-keys: true
    #使用列标签替换列别名 默认:true
    use-column-label: true
    #配置全局的启用或禁用缓存策略 默认:true
    cache-enabled: true
    #全局启用或禁用延迟加载。当禁用时, 所有关联都会马上被加载。 默认:false
    lazy-loading-enabled: true
    #当启用时, 有延迟加载属性的对象在被调用时将所有属性都进行加载。否则,该对象的每个属性将会按需加载。 默认:true
    aggressive-lazy-loading: true
    #打印SQL
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl





---
#开发测试环境
spring:
    profiles: dev
    datasource:
      url: jdbc:mysql://39.98.219.129:3306/jzh_accesscontrol?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: jzh8888test
    redis:
      # 服务器IP地址
      host: 39.98.219.129
      # 连接端口
      port: 6379
      # Redis服务器连接密码
      password: jzh123456
      database: 0
      jedis:
        pool:
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 8
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
           # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池中的最小空闲连接
          min-idle: 0

---
#生产环境
spring:
    profiles: prod
    datasource:
      url: jdbc:mysql://localhost:3306/jzh_accesscontrol?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: jzh8888test
    redis:
      # 服务器IP地址
      host: localhost
      # 连接端口
      port: 6379
      # Redis服务器连接密码
      password: jzh123456
      database: 0
      jedis:
        pool:
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 8
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
           # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池中的最小空闲连接
          min-idle: 0










#pagehelper分页插件
pagehelper:
  reasonable: true
  support-methods-arguments: true
  params: count=countSql
  helper-dialect: mysql


---
#FreeMarker
spring:
  freemarker:
    #是否允许HttpServletRequest属性覆盖(隐藏)控制器生成的同名模型属性。
    allow-request-override: false
    # 是否允许HttpSession属性覆盖(隐藏)控制器生成的同名模型属性。
    allow-session-override: false
    # 是否启用模板缓存。
    cache: false
    # 模板编码。
    charset: UTF-8
    # 是否检查模板位置是否存在。
    check-template-location: true
    # Content-Type value.
    content-type: text/html
    # 是否启用freemarker
    enabled: false
    # 设定所有request的属性在merge到模板的时候，是否要都添加到model中.
    expose-request-attributes: false
    # 是否在merge模板的时候，将HttpSession属性都添加到model中
    expose-session-attributes: false
    # 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
    expose-spring-macro-helpers: true
    # 是否优先从文件系统加载template，以支持热加载，默认为true
    prefer-file-system-access: true
    # 设定模板的后缀.
    suffix: .ftl
    # 设定模板的加载路径，多个以逗号分隔，默认:
    template-loader-path: classpath:/templates/

---
#thymeleaf模板
spring:
  thymeleaf:
    cache: false
    encoding: UTF-8
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true
    servlet:
      content-type: text/html


